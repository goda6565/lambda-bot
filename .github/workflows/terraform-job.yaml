name: "Terraform Multi-Env CI"

on:
  push:
    paths:
      - 'terraform/**'

env:
  TF_VERSION: 1.12.0
  OIDC_ARN: arn:aws:iam::061051222129:role/github-actions-oidc-role
  AWS_REGION: ap-northeast-1

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: "Terraform Apply Plan"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ["terraform/shared", "terraform/envs/prod"]
      fail-fast: false
    defaults:
      run:
        working-directory: ${{ matrix.directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup tfcmt
        uses: shmokmt/actions-setup-tfcmt@v2
        with:
          version: v4.13.0

      - name: Assume Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.OIDC_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Set environment name
        id: set-env
        run: echo "env_name=$(basename "${{ matrix.directory }}")" >> $GITHUB_OUTPUT

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt -var "target:${{ steps.set-env.outputs.env_name }}" plan -patch=false -- terraform plan -no-color -input=false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt apply -- terraform apply -auto-approve -input=false